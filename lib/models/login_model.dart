///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class LoginDataModelPolicyDetails {
/*
{
  "policyId": 1,
  "policyType": "Comprehensive",
  "policyNumber": "VMPB091564000100",
  "policyHolder": "PARTHASARATHI B",
  "policyIssueDate": "12/07/2019",
  "policyExpiryDate": "12/07/2020",
  "totalpremium": "1028.0",
  "policyDocImageUrl": "http://staging.infosmart.co.in/mapp/infoinsure/resourcesVMPB091564000100",
  "vehicleNo": "CANiQ Test",
  "make": "HONDA MOTORS LTD",
  "model": "CB UNICORN DAZZLER-2",
  "vehicleProfilePicUrl": "http://staging.infosmart.co.in/mapp/infoinsure/resources/images/profileimages/1023_CANiQTest.png?34",
  "vehicleTypeId": 1,
  "vehicleId": 1023,
  "totalDistance": 0,
  "totalDuration": "",
  "policyDuration": "",
  "tollFreeNumber": "18002667780",
  "schemeName": "",
  "allowedKM": "",
  "clientId": 357
} 
*/

  int? policyId;
  String? policyType;
  String? policyNumber;
  String? policyHolder;
  String? policyIssueDate;
  String? policyExpiryDate;
  String? totalpremium;
  String? policyDocImageUrl;
  String? vehicleNo;
  String? make;
  String? model;
  String? vehicleProfilePicUrl;
  int? vehicleTypeId;
  int? vehicleId;
  int? totalDistance;
  String? totalDuration;
  String? policyDuration;
  String? tollFreeNumber;
  String? schemeName;
  String? allowedKM;
  int? clientId;

  LoginDataModelPolicyDetails({
    this.policyId,
    this.policyType,
    this.policyNumber,
    this.policyHolder,
    this.policyIssueDate,
    this.policyExpiryDate,
    this.totalpremium,
    this.policyDocImageUrl,
    this.vehicleNo,
    this.make,
    this.model,
    this.vehicleProfilePicUrl,
    this.vehicleTypeId,
    this.vehicleId,
    this.totalDistance,
    this.totalDuration,
    this.policyDuration,
    this.tollFreeNumber,
    this.schemeName,
    this.allowedKM,
    this.clientId,
  });
  LoginDataModelPolicyDetails.fromJson(Map<String, dynamic> json) {
    policyId = json['policyId']?.toInt();
    policyType = json['policyType']?.toString();
    policyNumber = json['policyNumber']?.toString();
    policyHolder = json['policyHolder']?.toString();
    policyIssueDate = json['policyIssueDate']?.toString();
    policyExpiryDate = json['policyExpiryDate']?.toString();
    totalpremium = json['totalpremium']?.toString();
    policyDocImageUrl = json['policyDocImageUrl']?.toString();
    vehicleNo = json['vehicleNo']?.toString();
    make = json['make']?.toString();
    model = json['model']?.toString();
    vehicleProfilePicUrl = json['vehicleProfilePicUrl']?.toString();
    vehicleTypeId = json['vehicleTypeId']?.toInt();
    vehicleId = json['vehicleId']?.toInt();
    totalDistance = json['totalDistance']?.toInt();
    totalDuration = json['totalDuration']?.toString();
    policyDuration = json['policyDuration']?.toString();
    tollFreeNumber = json['tollFreeNumber']?.toString();
    schemeName = json['schemeName']?.toString();
    allowedKM = json['allowedKM']?.toString();
    clientId = json['clientId']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['policyId'] = policyId;
    data['policyType'] = policyType;
    data['policyNumber'] = policyNumber;
    data['policyHolder'] = policyHolder;
    data['policyIssueDate'] = policyIssueDate;
    data['policyExpiryDate'] = policyExpiryDate;
    data['totalpremium'] = totalpremium;
    data['policyDocImageUrl'] = policyDocImageUrl;
    data['vehicleNo'] = vehicleNo;
    data['make'] = make;
    data['model'] = model;
    data['vehicleProfilePicUrl'] = vehicleProfilePicUrl;
    data['vehicleTypeId'] = vehicleTypeId;
    data['vehicleId'] = vehicleId;
    data['totalDistance'] = totalDistance;
    data['totalDuration'] = totalDuration;
    data['policyDuration'] = policyDuration;
    data['tollFreeNumber'] = tollFreeNumber;
    data['schemeName'] = schemeName;
    data['allowedKM'] = allowedKM;
    data['clientId'] = clientId;
    return data;
  }
}

class LoginDataModelErrorDetail {
/*
{
  "id": "",
  "message": ""
} 
*/

  String? id;
  String? message;

  LoginDataModelErrorDetail({
    this.id,
    this.message,
  });
  LoginDataModelErrorDetail.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    message = json['message']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['message'] = message;
    return data;
  }
}

class LoginDataModel {
/*
{
  "status": "200",
  "errorDetail": {
    "id": "",
    "message": ""
  },
  "statusMessage": "",
  "authToken": "cbf86cf1-287d-4831-a0f7-eb20de18e967",
  "userName": "PARTHASARATHI B",
  "emailId": "",
  "mobileNumber": "9538080000",
  "profilePicUrl": "http://staging.infosmart.co.in/mapp/infoinsure/resources/images/profileimages/22_PARTHASARATHIB.png?24",
  "emergencyContactNo": "7847030899",
  "policyDetails": [
    {
      "policyId": 1,
      "policyType": "Comprehensive",
      "policyNumber": "VMPB091564000100",
      "policyHolder": "PARTHASARATHI B",
      "policyIssueDate": "12/07/2019",
      "policyExpiryDate": "12/07/2020",
      "totalpremium": "1028.0",
      "policyDocImageUrl": "http://staging.infosmart.co.in/mapp/infoinsure/resourcesVMPB091564000100",
      "vehicleNo": "CANiQ Test",
      "make": "HONDA MOTORS LTD",
      "model": "CB UNICORN DAZZLER-2",
      "vehicleProfilePicUrl": "http://staging.infosmart.co.in/mapp/infoinsure/resources/images/profileimages/1023_CANiQTest.png?34",
      "vehicleTypeId": 1,
      "vehicleId": 1023,
      "totalDistance": 0,
      "totalDuration": "",
      "policyDuration": "",
      "tollFreeNumber": "18002667780",
      "schemeName": "",
      "allowedKM": "",
      "clientId": 357
    }
  ]
} 
*/

  String? status;
  LoginDataModelErrorDetail? errorDetail;
  String? statusMessage;
  String? authToken;
  String? userName;
  String? emailId;
  String? mobileNumber;
  String? profilePicUrl;
  String? emergencyContactNo;
  List<LoginDataModelPolicyDetails?>? policyDetails;

  LoginDataModel({
    this.status,
    this.errorDetail,
    this.statusMessage,
    this.authToken,
    this.userName,
    this.emailId,
    this.mobileNumber,
    this.profilePicUrl,
    this.emergencyContactNo,
    this.policyDetails,
  });
  LoginDataModel.fromJson(Map<String, dynamic> json) {
    status = json['status']?.toString();
    errorDetail = (json['errorDetail'] != null)
        ? LoginDataModelErrorDetail.fromJson(json['errorDetail'])
        : null;
    statusMessage = json['statusMessage']?.toString();
    authToken = json['authToken']?.toString();
    userName = json['userName']?.toString();
    emailId = json['emailId']?.toString();
    mobileNumber = json['mobileNumber']?.toString();
    profilePicUrl = json['profilePicUrl']?.toString();
    emergencyContactNo = json['emergencyContactNo']?.toString();
    if (json['policyDetails'] != null) {
      final v = json['policyDetails'];
      final arr0 = <LoginDataModelPolicyDetails>[];
      v.forEach((v) {
        arr0.add(LoginDataModelPolicyDetails.fromJson(v));
      });
      policyDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    if (errorDetail != null) {
      data['errorDetail'] = errorDetail!.toJson();
    }
    data['statusMessage'] = statusMessage;
    data['authToken'] = authToken;
    data['userName'] = userName;
    data['emailId'] = emailId;
    data['mobileNumber'] = mobileNumber;
    data['profilePicUrl'] = profilePicUrl;
    data['emergencyContactNo'] = emergencyContactNo;
    if (policyDetails != null) {
      final v = policyDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['policyDetails'] = arr0;
    }
    return data;
  }
}
